#include <stdio.h>

struct process {

    int pid;  // process ID

    int arrival_time;  // arrival time of the process

    int burst_time;  // burst time of the process

    int completion_time;  // completion time of the process

    int turnaround_time;  // turnaround time of the process

    int waiting_time;  // waiting time of the process

    int remaining_time; // remaining time of the process

};

int main() {

    int n, i, j, time_quantum;

    printf("Enter the number of processes: ");

    scanf("%d", &n);

    struct process p[n];

    for (i = 0; i < n; i++) {

        printf("Enter the arrival time and burst time of process %d: ", i+1);

        scanf("%d %d", &p[i].arrival_time, &p[i].burst_time);

        p[i].pid = i+1;

        p[i].remaining_time = p[i].burst_time;

    }

    printf("Enter the time quantum: ");

    scanf("%d", &time_quantum);

    int time = 0, count = n;

    while (count != 0) {

        for (i = 0; i < n; i++) {

            if (p[i].remaining_time <= time_quantum && p[i].remaining_time > 0) {

                time += p[i].remaining_time;

                p[i].remaining_time = 0;

                count--;

                p[i].completion_time = time;

                p[i].turnaround_time = p[i].completion_time - p[i].arrival_time;

                p[i].waiting_time = p[i].turnaround_time - p[i].burst_time;

            }

            else if (p[i].remaining_time > 0) {

                time += time_quantum;

                p[i].remaining_time -= time_quantum;

            }

        }

    }

    float total_waiting_time = 0, total_turnaround_time = 0;

    printf("\nProcess\t Arrival Time\t Burst Time\t Completion Time\t Turnaround Time\t Waiting Time\n");

    for (i = 0; i < n; i++) {

        printf("P%d\t\t %d\t\t %d\t\t %d\t\t\t %d\t\t\t %d\n", p[i].pid, p[i].arrival_time, p[i].burst_time, p[i].completion_time, p[i].turnaround_time, p[i].waiting_time);

        total_waiting_time += p[i].waiting_time;

        total_turnaround_time += p[i].turnaround_time;

    }

    printf("\nAverage Waiting Time: %.2f\n", total_waiting_time/n);

    printf("Average Turnaround Time: %.2f\n", total_turnaround_time/n);

    return 0;

}

